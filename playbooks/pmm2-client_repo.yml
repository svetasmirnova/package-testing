---
# Temporary debug of pmm2-client package presence
#
- hosts: localhost
  become: true
  become_method: sudo
  connection: local
  vars:
    pmm_server_address: "{{ lookup('env', 'PMM_SERVER_IP') }}"
    pmm_server_password: "{{ lookup('env', 'ADMIN_PASSWORD') | default('admin', true) }}"
    test_repo: "{{ lookup('env', 'install_repo') }}"
    metrics_mode: "{{ lookup('env', 'METRICS_MODE') | default('auto', true) }}"
    pmm_version: "{{ lookup('env', 'PMM_VERSION') | regex_search('\\S(.*\\S)?') }}"

  tasks:
    - name: remove the Percona apt main repository
      apt: name=percona-release state=absent
      when: ansible_os_family == "Debian"

    - name: remove the Percona yum repositories
      yum: name=percona-release state=absent
      when: ansible_os_family == "RedHat"

    - name: remove saved repo files in yum
      file: path={{ item }} state=absent
      with_items:
        - /etc/yum.repos.d/percona-release.repo
        - /etc/yum.repos.d/percona-release.repo.rpmsave
        - /etc/yum.repos.d/percona-original-release.repo
        - /etc/yum.repos.d/percona-original-release.repo.rpmsave
        - /etc/yum.repos.d/percona-original-testing.repo
        - /etc/yum.repos.d/percona-original-testing.repo.rpmsave
      when: ansible_os_family == "RedHat"

    - name: setup epel 7 repo
      yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm state=present
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

    - name: install GPG key for epel 8
      rpm_key:
        state: present
        key: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-8
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

    - name: install GPG key for Percona repos
      rpm_key:
        state: present
        key: https://repo.percona.com/yum/RPM-GPG-KEY-Percona
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version >= "8"

    - name: setup epel 8 repo
      yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm state=present
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

    - name: install GPG key for epel 9
      rpm_key:
        state: present
        key: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-9
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "9"

    - name: setup epel 9 repo
      yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm state=present
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "9"

    - name: Allow release-info to change for apt repositories
      command: apt-get update -y --allow-releaseinfo-change
      when: ansible_os_family == "Debian" and ansible_distribution_release == "buster"

    - name: Install percona-release package Debian
      apt:
        deb: https://repo.percona.com/apt/percona-release_latest.generic_all.deb
      when: ansible_os_family == "Debian"

    - name: Install percona-release package RedHat
      command: yum -y install https://repo.percona.com/yum/percona-release-latest.noarch.rpm
      #  args:
      #    warn: no
      when: ansible_os_family == "RedHat"

    - name: clean and update yum cache
      shell: |
        yum clean all
      #   yum makecache
      when: ansible_os_family == "RedHat"

### release
    - name: percona-release enable-only pmm2-client release
      command: percona-release enable-only pmm2-client release
      become: true

    - name: Update apt repositories
      command: apt-get update -y
      when: ansible_os_family == "Debian"

    - name: Update repo for redhat
      shell: yum update -y
      when: ansible_os_family == "RedHat"

    - name: Get pmm2-client versions from yum
      shell: yum list pmm2-client --showduplicates
      register: rel_rpm
      when: ansible_os_family == "RedHat"
    - name: Print pmm2-client only release versions
      debug:
        msg: "{{rel_rpm.stdout}}"
      when: ansible_os_family == "RedHat"

    - name: Get pmm2-client versions from yum apt
      shell: apt-cache madison pmm2-client
      register: rel_deb
      when: ansible_os_family == "Debian"
    - name: Print pmm2-client only release versions
      debug:
        msg: "{{rel_deb.stdout}}"
      when: ansible_os_family == "Debian"

### testing
    - name: percona-release enable-only pmm2-client testing
      command: percona-release enable-only pmm2-client testing
      become: true

    - name: Update apt repositories
      command: apt-get update -y
      when: ansible_os_family == "Debian"

    - name: Update repo for redhat
      shell: yum update -y
      when: ansible_os_family == "RedHat"

    - name: Get pmm2-client versions from yum
      shell: yum list pmm2-client --showduplicates
      register: rel_rpm
      when: ansible_os_family == "RedHat"
    - name: Print pmm2-client only testing versions
      debug:
        msg: "{{rel_rpm.stdout}}"
      when: ansible_os_family == "RedHat"

    - name: Get pmm2-client versions from yum apt
      shell: apt-cache madison pmm2-client
      register: rel_deb
      when: ansible_os_family == "Debian"
    - name: Print pmm2-client only testing versions
      debug:
        msg: "{{rel_deb.stdout}}"
      when: ansible_os_family == "Debian"

### experimental
    - name: percona-release enable-only pmm2-client experimental
      command: percona-release enable-only pmm2-client experimental
      become: true

    - name: Update apt repositories
      command: apt-get update -y
      when: ansible_os_family == "Debian"

    - name: Update repo for redhat
      shell: yum update -y
      when: ansible_os_family == "RedHat"

    - name: Get pmm2-client versions from yum
      shell: yum list pmm2-client --showduplicates
      register: rel_rpm
      when: ansible_os_family == "RedHat"
    - name: Print pmm2-client only experimental versions
      debug:
        msg: "{{rel_rpm.stdout}}"
      when: ansible_os_family == "RedHat"

    - name: Get pmm2-client versions from yum apt
      shell: apt-cache madison pmm2-client
      register: rel_deb
      when: ansible_os_family == "Debian"
    - name: Print pmm2-client only experimental versions
      debug:
        msg: "{{rel_deb.stdout}}"
      when: ansible_os_family == "Debian"
